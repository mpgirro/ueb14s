Grammar

    0 $accept: yyyAugNonterm $end

    1 $@1: /* empty */

    2 yyyAugNonterm: $@1 Start

    3 Start: Program

    4 Program: /* empty */
    5        | Program Def ';'

    6 Def: Funcdef
    7    | Structdef

    8 Structdef: STRUCT IDENTIFIER ':' FieldDef END

    9 FieldDef: /* empty */
   10         | FieldDef IDENTIFIER

   11 ParamDef: /* empty */
   12         | ParamDef IDENTIFIER

   13 Funcdef: FUNC IDENTIFIER '(' ParamDef ')' Stats END

   14 Stats: /* empty */
   15      | Stat ';' Stats

   16 Stat: RETURN Expr
   17     | COND Condlist END
   18     | LET LetDef IN Stats END
   19     | WITH Expr ':' IDENTIFIER DO Stats END
   20     | Lexpr '=' Expr
   21     | Term

   22 Condlist: /* empty */
   23         | Condlist Expr THEN Stats END ';'

   24 LetDef: /* empty */
   25       | LetDef IDENTIFIER '=' Expr ';'

   26 Lexpr: Term '.' IDENTIFIER
   27      | IDENTIFIER

   28 Notexpr: '-' Term
   29        | NOT Term
   30        | '-' Notexpr
   31        | NOT Notexpr

   32 Addexpr: Term '+' Term
   33        | Addexpr '+' Term

   34 Mulexpr: Term '*' Term
   35        | Mulexpr '*' Term

   36 Orexpr: Term OR Term
   37       | Orexpr OR Term

   38 Expr: Notexpr
   39     | Addexpr
   40     | Mulexpr
   41     | Orexpr
   42     | Term '>' Term
   43     | Term NOTEQUAL Term
   44     | Term

   45 ExprList: /* empty */
   46         | ExprList Expr ','

   47 FinalArg: /* empty */
   48         | Expr

   49 Term: '(' Expr ')'
   50     | NUMBER
   51     | Term '.' IDENTIFIER
   52     | IDENTIFIER
   53     | IDENTIFIER '(' ExprList FinalArg ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 13 49 53
')' (41) 13 49 53
'*' (42) 34 35
'+' (43) 32 33
',' (44) 46
'-' (45) 28 30
'.' (46) 26 51
':' (58) 8 19
';' (59) 5 15 23 25
'=' (61) 20 25
'>' (62) 42
error (256)
STRUCT (258) 8
END (259) 8 13 17 18 19 23
FUNC (260) 13
RETURN (261) 16
WITH (262) 19
DO (263) 19
LET (264) 18
IN (265) 18
COND (266) 17
THEN (267) 23
NOT (268) 29 31
OR (269) 36 37
NOTEQUAL (270) 43
NUMBER (271) 50
IDENTIFIER (272) 8 10 12 13 19 25 26 27 51 52 53


Nonterminals, with rules where they appear

$accept (29)
    on left: 0
yyyAugNonterm (30)
    on left: 2, on right: 0
$@1 (31)
    on left: 1, on right: 2
Start (32)
    on left: 3, on right: 2
Program (33)
    on left: 4 5, on right: 3 5
Def (34)
    on left: 6 7, on right: 5
Structdef (35)
    on left: 8, on right: 7
FieldDef (36)
    on left: 9 10, on right: 8 10
ParamDef (37)
    on left: 11 12, on right: 12 13
Funcdef (38)
    on left: 13, on right: 6
Stats (39)
    on left: 14 15, on right: 13 15 18 19 23
Stat (40)
    on left: 16 17 18 19 20 21, on right: 15
Condlist (41)
    on left: 22 23, on right: 17 23
LetDef (42)
    on left: 24 25, on right: 18 25
Lexpr (43)
    on left: 26 27, on right: 20
Notexpr (44)
    on left: 28 29 30 31, on right: 30 31 38
Addexpr (45)
    on left: 32 33, on right: 33 39
Mulexpr (46)
    on left: 34 35, on right: 35 40
Orexpr (47)
    on left: 36 37, on right: 37 41
Expr (48)
    on left: 38 39 40 41 42 43 44, on right: 16 19 20 23 25 46 48 49
ExprList (49)
    on left: 45 46, on right: 46 53
FinalArg (50)
    on left: 47 48, on right: 53
Term (51)
    on left: 49 50 51 52 53, on right: 21 26 28 29 32 33 34 35 36 37
    42 43 44 51


state 0

    0 $accept: . yyyAugNonterm $end

    $default  reduce using rule 1 ($@1)

    yyyAugNonterm  go to state 1
    $@1            go to state 2


state 1

    0 $accept: yyyAugNonterm . $end

    $end  shift, and go to state 3


state 2

    2 yyyAugNonterm: $@1 . Start

    $default  reduce using rule 4 (Program)

    Start    go to state 4
    Program  go to state 5


state 3

    0 $accept: yyyAugNonterm $end .

    $default  accept


state 4

    2 yyyAugNonterm: $@1 Start .

    $default  reduce using rule 2 (yyyAugNonterm)


state 5

    3 Start: Program .
    5 Program: Program . Def ';'

    STRUCT  shift, and go to state 6
    FUNC    shift, and go to state 7

    $default  reduce using rule 3 (Start)

    Def        go to state 8
    Structdef  go to state 9
    Funcdef    go to state 10


state 6

    8 Structdef: STRUCT . IDENTIFIER ':' FieldDef END

    IDENTIFIER  shift, and go to state 11


state 7

   13 Funcdef: FUNC . IDENTIFIER '(' ParamDef ')' Stats END

    IDENTIFIER  shift, and go to state 12


state 8

    5 Program: Program Def . ';'

    ';'  shift, and go to state 13


state 9

    7 Def: Structdef .

    $default  reduce using rule 7 (Def)


state 10

    6 Def: Funcdef .

    $default  reduce using rule 6 (Def)


state 11

    8 Structdef: STRUCT IDENTIFIER . ':' FieldDef END

    ':'  shift, and go to state 14


state 12

   13 Funcdef: FUNC IDENTIFIER . '(' ParamDef ')' Stats END

    '('  shift, and go to state 15


state 13

    5 Program: Program Def ';' .

    $default  reduce using rule 5 (Program)


state 14

    8 Structdef: STRUCT IDENTIFIER ':' . FieldDef END

    $default  reduce using rule 9 (FieldDef)

    FieldDef  go to state 16


state 15

   13 Funcdef: FUNC IDENTIFIER '(' . ParamDef ')' Stats END

    $default  reduce using rule 11 (ParamDef)

    ParamDef  go to state 17


state 16

    8 Structdef: STRUCT IDENTIFIER ':' FieldDef . END
   10 FieldDef: FieldDef . IDENTIFIER

    END         shift, and go to state 18
    IDENTIFIER  shift, and go to state 19


state 17

   12 ParamDef: ParamDef . IDENTIFIER
   13 Funcdef: FUNC IDENTIFIER '(' ParamDef . ')' Stats END

    IDENTIFIER  shift, and go to state 20
    ')'         shift, and go to state 21


state 18

    8 Structdef: STRUCT IDENTIFIER ':' FieldDef END .

    $default  reduce using rule 8 (Structdef)


state 19

   10 FieldDef: FieldDef IDENTIFIER .

    $default  reduce using rule 10 (FieldDef)


state 20

   12 ParamDef: ParamDef IDENTIFIER .

    $default  reduce using rule 12 (ParamDef)


state 21

   13 Funcdef: FUNC IDENTIFIER '(' ParamDef ')' . Stats END

    RETURN      shift, and go to state 22
    WITH        shift, and go to state 23
    LET         shift, and go to state 24
    COND        shift, and go to state 25
    NUMBER      shift, and go to state 26
    IDENTIFIER  shift, and go to state 27
    '('         shift, and go to state 28

    $default  reduce using rule 14 (Stats)

    Stats  go to state 29
    Stat   go to state 30
    Lexpr  go to state 31
    Term   go to state 32


state 22

   16 Stat: RETURN . Expr

    NOT         shift, and go to state 33
    NUMBER      shift, and go to state 26
    IDENTIFIER  shift, and go to state 34
    '('         shift, and go to state 28
    '-'         shift, and go to state 35

    Notexpr  go to state 36
    Addexpr  go to state 37
    Mulexpr  go to state 38
    Orexpr   go to state 39
    Expr     go to state 40
    Term     go to state 41


state 23

   19 Stat: WITH . Expr ':' IDENTIFIER DO Stats END

    NOT         shift, and go to state 33
    NUMBER      shift, and go to state 26
    IDENTIFIER  shift, and go to state 34
    '('         shift, and go to state 28
    '-'         shift, and go to state 35

    Notexpr  go to state 36
    Addexpr  go to state 37
    Mulexpr  go to state 38
    Orexpr   go to state 39
    Expr     go to state 42
    Term     go to state 41


state 24

   18 Stat: LET . LetDef IN Stats END

    $default  reduce using rule 24 (LetDef)

    LetDef  go to state 43


state 25

   17 Stat: COND . Condlist END

    $default  reduce using rule 22 (Condlist)

    Condlist  go to state 44


state 26

   50 Term: NUMBER .

    $default  reduce using rule 50 (Term)


state 27

   27 Lexpr: IDENTIFIER .
   52 Term: IDENTIFIER .
   53     | IDENTIFIER . '(' ExprList FinalArg ')'

    '('  shift, and go to state 45

    '='       reduce using rule 27 (Lexpr)
    $default  reduce using rule 52 (Term)


state 28

   49 Term: '(' . Expr ')'

    NOT         shift, and go to state 33
    NUMBER      shift, and go to state 26
    IDENTIFIER  shift, and go to state 34
    '('         shift, and go to state 28
    '-'         shift, and go to state 35

    Notexpr  go to state 36
    Addexpr  go to state 37
    Mulexpr  go to state 38
    Orexpr   go to state 39
    Expr     go to state 46
    Term     go to state 41


state 29

   13 Funcdef: FUNC IDENTIFIER '(' ParamDef ')' Stats . END

    END  shift, and go to state 47


state 30

   15 Stats: Stat . ';' Stats

    ';'  shift, and go to state 48


state 31

   20 Stat: Lexpr . '=' Expr

    '='  shift, and go to state 49


state 32

   21 Stat: Term .
   26 Lexpr: Term . '.' IDENTIFIER
   51 Term: Term . '.' IDENTIFIER

    '.'  shift, and go to state 50

    $default  reduce using rule 21 (Stat)


state 33

   29 Notexpr: NOT . Term
   31        | NOT . Notexpr

    NOT         shift, and go to state 33
    NUMBER      shift, and go to state 26
    IDENTIFIER  shift, and go to state 34
    '('         shift, and go to state 28
    '-'         shift, and go to state 35

    Notexpr  go to state 51
    Term     go to state 52


state 34

   52 Term: IDENTIFIER .
   53     | IDENTIFIER . '(' ExprList FinalArg ')'

    '('  shift, and go to state 45

    $default  reduce using rule 52 (Term)


state 35

   28 Notexpr: '-' . Term
   30        | '-' . Notexpr

    NOT         shift, and go to state 33
    NUMBER      shift, and go to state 26
    IDENTIFIER  shift, and go to state 34
    '('         shift, and go to state 28
    '-'         shift, and go to state 35

    Notexpr  go to state 53
    Term     go to state 54


state 36

   38 Expr: Notexpr .

    $default  reduce using rule 38 (Expr)


state 37

   33 Addexpr: Addexpr . '+' Term
   39 Expr: Addexpr .

    '+'  shift, and go to state 55

    $default  reduce using rule 39 (Expr)


state 38

   35 Mulexpr: Mulexpr . '*' Term
   40 Expr: Mulexpr .

    '*'  shift, and go to state 56

    $default  reduce using rule 40 (Expr)


state 39

   37 Orexpr: Orexpr . OR Term
   41 Expr: Orexpr .

    OR  shift, and go to state 57

    $default  reduce using rule 41 (Expr)


state 40

   16 Stat: RETURN Expr .

    $default  reduce using rule 16 (Stat)


state 41

   32 Addexpr: Term . '+' Term
   34 Mulexpr: Term . '*' Term
   36 Orexpr: Term . OR Term
   42 Expr: Term . '>' Term
   43     | Term . NOTEQUAL Term
   44     | Term .
   51 Term: Term . '.' IDENTIFIER

    OR        shift, and go to state 58
    NOTEQUAL  shift, and go to state 59
    '.'       shift, and go to state 60
    '+'       shift, and go to state 61
    '*'       shift, and go to state 62
    '>'       shift, and go to state 63

    $default  reduce using rule 44 (Expr)


state 42

   19 Stat: WITH Expr . ':' IDENTIFIER DO Stats END

    ':'  shift, and go to state 64


state 43

   18 Stat: LET LetDef . IN Stats END
   25 LetDef: LetDef . IDENTIFIER '=' Expr ';'

    IN          shift, and go to state 65
    IDENTIFIER  shift, and go to state 66


state 44

   17 Stat: COND Condlist . END
   23 Condlist: Condlist . Expr THEN Stats END ';'

    END         shift, and go to state 67
    NOT         shift, and go to state 33
    NUMBER      shift, and go to state 26
    IDENTIFIER  shift, and go to state 34
    '('         shift, and go to state 28
    '-'         shift, and go to state 35

    Notexpr  go to state 36
    Addexpr  go to state 37
    Mulexpr  go to state 38
    Orexpr   go to state 39
    Expr     go to state 68
    Term     go to state 41


state 45

   53 Term: IDENTIFIER '(' . ExprList FinalArg ')'

    $default  reduce using rule 45 (ExprList)

    ExprList  go to state 69


state 46

   49 Term: '(' Expr . ')'

    ')'  shift, and go to state 70


state 47

   13 Funcdef: FUNC IDENTIFIER '(' ParamDef ')' Stats END .

    $default  reduce using rule 13 (Funcdef)


state 48

   15 Stats: Stat ';' . Stats

    RETURN      shift, and go to state 22
    WITH        shift, and go to state 23
    LET         shift, and go to state 24
    COND        shift, and go to state 25
    NUMBER      shift, and go to state 26
    IDENTIFIER  shift, and go to state 27
    '('         shift, and go to state 28

    $default  reduce using rule 14 (Stats)

    Stats  go to state 71
    Stat   go to state 30
    Lexpr  go to state 31
    Term   go to state 32


state 49

   20 Stat: Lexpr '=' . Expr

    NOT         shift, and go to state 33
    NUMBER      shift, and go to state 26
    IDENTIFIER  shift, and go to state 34
    '('         shift, and go to state 28
    '-'         shift, and go to state 35

    Notexpr  go to state 36
    Addexpr  go to state 37
    Mulexpr  go to state 38
    Orexpr   go to state 39
    Expr     go to state 72
    Term     go to state 41


state 50

   26 Lexpr: Term '.' . IDENTIFIER
   51 Term: Term '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 73


state 51

   31 Notexpr: NOT Notexpr .

    $default  reduce using rule 31 (Notexpr)


state 52

   29 Notexpr: NOT Term .
   51 Term: Term . '.' IDENTIFIER

    '.'  shift, and go to state 60

    $default  reduce using rule 29 (Notexpr)


state 53

   30 Notexpr: '-' Notexpr .

    $default  reduce using rule 30 (Notexpr)


state 54

   28 Notexpr: '-' Term .
   51 Term: Term . '.' IDENTIFIER

    '.'  shift, and go to state 60

    $default  reduce using rule 28 (Notexpr)


state 55

   33 Addexpr: Addexpr '+' . Term

    NUMBER      shift, and go to state 26
    IDENTIFIER  shift, and go to state 34
    '('         shift, and go to state 28

    Term  go to state 74


state 56

   35 Mulexpr: Mulexpr '*' . Term

    NUMBER      shift, and go to state 26
    IDENTIFIER  shift, and go to state 34
    '('         shift, and go to state 28

    Term  go to state 75


state 57

   37 Orexpr: Orexpr OR . Term

    NUMBER      shift, and go to state 26
    IDENTIFIER  shift, and go to state 34
    '('         shift, and go to state 28

    Term  go to state 76


state 58

   36 Orexpr: Term OR . Term

    NUMBER      shift, and go to state 26
    IDENTIFIER  shift, and go to state 34
    '('         shift, and go to state 28

    Term  go to state 77


state 59

   43 Expr: Term NOTEQUAL . Term

    NUMBER      shift, and go to state 26
    IDENTIFIER  shift, and go to state 34
    '('         shift, and go to state 28

    Term  go to state 78


state 60

   51 Term: Term '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 79


state 61

   32 Addexpr: Term '+' . Term

    NUMBER      shift, and go to state 26
    IDENTIFIER  shift, and go to state 34
    '('         shift, and go to state 28

    Term  go to state 80


state 62

   34 Mulexpr: Term '*' . Term

    NUMBER      shift, and go to state 26
    IDENTIFIER  shift, and go to state 34
    '('         shift, and go to state 28

    Term  go to state 81


state 63

   42 Expr: Term '>' . Term

    NUMBER      shift, and go to state 26
    IDENTIFIER  shift, and go to state 34
    '('         shift, and go to state 28

    Term  go to state 82


state 64

   19 Stat: WITH Expr ':' . IDENTIFIER DO Stats END

    IDENTIFIER  shift, and go to state 83


state 65

   18 Stat: LET LetDef IN . Stats END

    RETURN      shift, and go to state 22
    WITH        shift, and go to state 23
    LET         shift, and go to state 24
    COND        shift, and go to state 25
    NUMBER      shift, and go to state 26
    IDENTIFIER  shift, and go to state 27
    '('         shift, and go to state 28

    $default  reduce using rule 14 (Stats)

    Stats  go to state 84
    Stat   go to state 30
    Lexpr  go to state 31
    Term   go to state 32


state 66

   25 LetDef: LetDef IDENTIFIER . '=' Expr ';'

    '='  shift, and go to state 85


state 67

   17 Stat: COND Condlist END .

    $default  reduce using rule 17 (Stat)


state 68

   23 Condlist: Condlist Expr . THEN Stats END ';'

    THEN  shift, and go to state 86


state 69

   46 ExprList: ExprList . Expr ','
   53 Term: IDENTIFIER '(' ExprList . FinalArg ')'

    NOT         shift, and go to state 33
    NUMBER      shift, and go to state 26
    IDENTIFIER  shift, and go to state 34
    '('         shift, and go to state 28
    '-'         shift, and go to state 35

    $default  reduce using rule 47 (FinalArg)

    Notexpr   go to state 36
    Addexpr   go to state 37
    Mulexpr   go to state 38
    Orexpr    go to state 39
    Expr      go to state 87
    FinalArg  go to state 88
    Term      go to state 41


state 70

   49 Term: '(' Expr ')' .

    $default  reduce using rule 49 (Term)


state 71

   15 Stats: Stat ';' Stats .

    $default  reduce using rule 15 (Stats)


state 72

   20 Stat: Lexpr '=' Expr .

    $default  reduce using rule 20 (Stat)


state 73

   26 Lexpr: Term '.' IDENTIFIER .
   51 Term: Term '.' IDENTIFIER .

    '='       reduce using rule 26 (Lexpr)
    $default  reduce using rule 51 (Term)


state 74

   33 Addexpr: Addexpr '+' Term .
   51 Term: Term . '.' IDENTIFIER

    '.'  shift, and go to state 60

    $default  reduce using rule 33 (Addexpr)


state 75

   35 Mulexpr: Mulexpr '*' Term .
   51 Term: Term . '.' IDENTIFIER

    '.'  shift, and go to state 60

    $default  reduce using rule 35 (Mulexpr)


state 76

   37 Orexpr: Orexpr OR Term .
   51 Term: Term . '.' IDENTIFIER

    '.'  shift, and go to state 60

    $default  reduce using rule 37 (Orexpr)


state 77

   36 Orexpr: Term OR Term .
   51 Term: Term . '.' IDENTIFIER

    '.'  shift, and go to state 60

    $default  reduce using rule 36 (Orexpr)


state 78

   43 Expr: Term NOTEQUAL Term .
   51 Term: Term . '.' IDENTIFIER

    '.'  shift, and go to state 60

    $default  reduce using rule 43 (Expr)


state 79

   51 Term: Term '.' IDENTIFIER .

    $default  reduce using rule 51 (Term)


state 80

   32 Addexpr: Term '+' Term .
   51 Term: Term . '.' IDENTIFIER

    '.'  shift, and go to state 60

    $default  reduce using rule 32 (Addexpr)


state 81

   34 Mulexpr: Term '*' Term .
   51 Term: Term . '.' IDENTIFIER

    '.'  shift, and go to state 60

    $default  reduce using rule 34 (Mulexpr)


state 82

   42 Expr: Term '>' Term .
   51 Term: Term . '.' IDENTIFIER

    '.'  shift, and go to state 60

    $default  reduce using rule 42 (Expr)


state 83

   19 Stat: WITH Expr ':' IDENTIFIER . DO Stats END

    DO  shift, and go to state 89


state 84

   18 Stat: LET LetDef IN Stats . END

    END  shift, and go to state 90


state 85

   25 LetDef: LetDef IDENTIFIER '=' . Expr ';'

    NOT         shift, and go to state 33
    NUMBER      shift, and go to state 26
    IDENTIFIER  shift, and go to state 34
    '('         shift, and go to state 28
    '-'         shift, and go to state 35

    Notexpr  go to state 36
    Addexpr  go to state 37
    Mulexpr  go to state 38
    Orexpr   go to state 39
    Expr     go to state 91
    Term     go to state 41


state 86

   23 Condlist: Condlist Expr THEN . Stats END ';'

    RETURN      shift, and go to state 22
    WITH        shift, and go to state 23
    LET         shift, and go to state 24
    COND        shift, and go to state 25
    NUMBER      shift, and go to state 26
    IDENTIFIER  shift, and go to state 27
    '('         shift, and go to state 28

    $default  reduce using rule 14 (Stats)

    Stats  go to state 92
    Stat   go to state 30
    Lexpr  go to state 31
    Term   go to state 32


state 87

   46 ExprList: ExprList Expr . ','
   48 FinalArg: Expr .

    ','  shift, and go to state 93

    $default  reduce using rule 48 (FinalArg)


state 88

   53 Term: IDENTIFIER '(' ExprList FinalArg . ')'

    ')'  shift, and go to state 94


state 89

   19 Stat: WITH Expr ':' IDENTIFIER DO . Stats END

    RETURN      shift, and go to state 22
    WITH        shift, and go to state 23
    LET         shift, and go to state 24
    COND        shift, and go to state 25
    NUMBER      shift, and go to state 26
    IDENTIFIER  shift, and go to state 27
    '('         shift, and go to state 28

    $default  reduce using rule 14 (Stats)

    Stats  go to state 95
    Stat   go to state 30
    Lexpr  go to state 31
    Term   go to state 32


state 90

   18 Stat: LET LetDef IN Stats END .

    $default  reduce using rule 18 (Stat)


state 91

   25 LetDef: LetDef IDENTIFIER '=' Expr . ';'

    ';'  shift, and go to state 96


state 92

   23 Condlist: Condlist Expr THEN Stats . END ';'

    END  shift, and go to state 97


state 93

   46 ExprList: ExprList Expr ',' .

    $default  reduce using rule 46 (ExprList)


state 94

   53 Term: IDENTIFIER '(' ExprList FinalArg ')' .

    $default  reduce using rule 53 (Term)


state 95

   19 Stat: WITH Expr ':' IDENTIFIER DO Stats . END

    END  shift, and go to state 98


state 96

   25 LetDef: LetDef IDENTIFIER '=' Expr ';' .

    $default  reduce using rule 25 (LetDef)


state 97

   23 Condlist: Condlist Expr THEN Stats END . ';'

    ';'  shift, and go to state 99


state 98

   19 Stat: WITH Expr ':' IDENTIFIER DO Stats END .

    $default  reduce using rule 19 (Stat)


state 99

   23 Condlist: Condlist Expr THEN Stats END ';' .

    $default  reduce using rule 23 (Condlist)
